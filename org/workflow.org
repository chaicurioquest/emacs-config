#+TITLE: GTD Workflow configurations
#+TODO: ACTIVE | CANCELLED
#+STARTUP: indent
#+PROPERTY: header-args:emacs-lisp :tangle yes
#+DATE: 2025-09-12
#+CREATED: %U
#+LAST_MODIFIED: [2025-10-10 Fri 22:17]

* ACTIVE Enable message alerts in general
#+BEGIN_SRC emacs-lisp
;; org-alert-config.el --- Device-aware org-alert configuration
(use-package alert
  :straight t
  :defer nil)
#+END_SRC

* ACTIVE Enable message alerts for Org mode and across different devices.
#+BEGIN_SRC emacs-lisp
(use-package org-alert
  :straight t
  :after (org alert)
  :defer t
  :config
  ;; my flag for single enable per session
  (defvar my-org-alert-enabled nil
    "Non-nil when org-alert has been enabled this session.")

  ;; sanitizer for notifications: single-line, truncated
  (defun my-alert-sanitize (str)
    (let* ((s (or str ""))
           (max-len 200))
      (replace-regexp-in-string
       "[\n\r]+" " "
       (substring-no-properties s 0 (min (length s) max-len)))))

  ;; Termux notifier style (only define if available)
  (when (executable-find "termux-notification")
    (alert-define-style 'termux
      :title "Termux Notification"
      :notifier (lambda (info)
                  (let ((title (my-alert-sanitize (plist-get info :title)))
                        (message (my-alert-sanitize (plist-get info :message))))
                    (start-process "termux-notification" nil "termux-notification"
                                   "--title" title "--content" message)))))

  ;; set per-device defaults *before* enabling org-alert
  (pcase (and (boundp 'my-device) my-device)
    ('laptop
     (setq alert-default-style
           (cond
            ((and (eq system-type 'gnu/linux) (executable-find "notify-send")) 'libnotify)
            ((and (eq system-type 'darwin)  (executable-find "terminal-notifier")) 'osx-notifier)
            (t 'message)))
     (setq org-alert-interval 300
           org-alert-notify-cutoff 15
           org-alert-notify-after-event-cutoff 15))
    ('tablet
     (setq alert-default-style (if (executable-find "termux-notification") 'termux 'message))
     (setq org-alert-interval 120
           org-alert-notify-cutoff 10
           org-alert-notify-after-event-cutoff 10))
    ('phone
     (setq alert-default-style (if (executable-find "termux-notification") 'termux 'message))
     (setq org-alert-interval 60
           org-alert-notify-cutoff 5
           org-alert-notify-after-event-cutoff 5))
    (_ ;; fallback
     (setq alert-default-style 'message
           org-alert-interval 300
           org-alert-notify-cutoff 10
           org-alert-notify-after-event-cutoff 10)))

  ;; Enable once after variables set
  (unless my-org-alert-enabled
    (org-alert-enable)
    (setq my-org-alert-enabled t))

  (message "Org-alert: style=%s device=%s interval=%ds cutoff=%dmin"
           alert-default-style
           (if (boundp 'my-device) my-device 'unknown)
           org-alert-interval
           org-alert-notify-cutoff))
#+END_SRC
